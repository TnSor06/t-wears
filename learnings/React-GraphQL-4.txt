Using Graphql in React(Refer graphql-lesson for reference of files)
Use Apollo: Different than redux and context API and Easy with async data
Install using: npm i apollo-boost react-apollo graphql
Apollo: Make it easy to cache data from graphql and does not make request again if data is not changed for like singular collection
    1. Setup: index.js
    2. Querying Graphql in components
        Wrap A container component around main component so that container component performs data request and main component display data
        + collections-overview.component.jsx & collections-overview.container.jsx -> shop.component.jsx
    3. Querying with variable in Graphql
        + collection.component.jsx and collection.container.jsx
    4. Redux vs Graphql (Should use either part)
        See Redux Action Flow.png and Grpahql Action Flow.png
        We should use either because of single source of data and unified flow of data
    5. Mutation in Graphql and Replacing Redux to manage state and local data
        Apollo provide a single state management using client and cache in localstorage
        // Cached Data initialization
        client.writeData({
            data: {
                cartHidden: true,
            },
        });
    6. Creating resolver for data query or mutation:
        a. In src folder create "graphql" folder and in that resolver.js
        + resolvers.js and queries.js 
            pass resolvers and typeDefs in index.js at
                const client = new ApolloClient({
                    link: httpLink,
                    cache,
                    typeDefs,
                    resolvers,
                });
    7. Using Mutation in component
        + header.container.jsx pass it to App.js
        + cart-icon.container.jsx -> header.component.jsx
        + collection-item.container.jsx
    8. Wrapping both query and mutation 
        + cart-dropdown.container.jsx
    9. use compose and graphql function from "react-apollo" instead of Query and Mutation
    Note: compose was removed from react-apollo so to use compose
        a. npm i lodash
        b. import {flowRight as compose} from 'lodash';